
sudo nohup gunicorn .wsgi:application -b 0.0.0.0:8000&

#也可以直接启动
gunicorn .wsgi:application -b 0.0.0.0:8000 -w 4 -k gthread

gunicorn pyweb.wsgi:application -b 0.0.0.0:8000 -w 4 -k gthread

gunicorn manage:app -c gunicorn.conf.py
pstree -ap|grep gunicorn

gunicorn pyweb.wsgi:application -b 0.0.0.0:8000 -w 4 -k gthread
gunicorn pyweb.wsgi:application
gunicorn --config=config.py pyweb.wsgi:application
nohup  gunicorn --config=config.py pyweb.wsgi:application >/dev/null 2>&1 &
ps -ef |grep gunicorn|grep -v grep|awk '{print }'| xargs kill -9


gunicorn -c gunicorn.conf.py .wsgi:application

#以gunicorn.conf.py配置文件启动gunicorn
gunicorn -c gunicorn.conf.py api.wsgi:application


杀死gunicorn进程

ps -ef |grep gunicorn|grep -v grep|awk '{print }'| xargs kill -9

#也可以直接启动
gunicorn .wsgi:application -b 0.0.0.0:8000 -w 4 -k gthread

#gunicorn .wsgi:application -b 0.0.0.0:8091 -w 4 -k gthread  --thread 40 --max-requests 4096 --max-requests-jitter 512

sudo pkill -f uwsgi -9

uwsgi  --ini  uwsgi.ini

uwsgi --stop uwsgi.pid

uwsgi --reload uwsgi.pid

uwsgi --http 0.0.0.0:8000 --file /wsgi.py --static-map=/static=static


pip freeze > pkg.txt
将当前生产环境下 Python 的模块收集起来存放到 pkg.txt 文件里
pip install -r pkg.txt
在部署环境下降生产环境下的需要模块全部安装

